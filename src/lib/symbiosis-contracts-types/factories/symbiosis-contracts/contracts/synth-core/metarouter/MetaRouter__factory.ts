/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  MetaRouter,
  MetaRouterInterface,
} from "../../../../../symbiosis-contracts/contracts/synth-core/metarouter/MetaRouter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TransitTokenSent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiveSide",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_offset",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "externalCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stableBridgingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "crossChainID",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "externalID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "tokenReal",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "swapTokens",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "secondDexRouter",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "secondSwapCalldata",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "finalReceiveSide",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "finalCalldata",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "finalOffset",
            type: "uint256",
          },
        ],
        internalType: "struct MetaRouteStructs.MetaMintTransaction",
        name: "_metaMintTransaction",
        type: "tuple",
      },
    ],
    name: "metaMintSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stableBridgingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "BtcSerial",
            name: "serial",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "crossChainID",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "externalID",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "tokenReal",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "swapTokens",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "secondDexRouter",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "secondSwapCalldata",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "finalReceiveSide",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "finalCalldata",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "finalOffset",
            type: "uint256",
          },
        ],
        internalType: "struct MetaRouteStructs.MetaMintTransactionBTC",
        name: "_metaMintTransaction",
        type: "tuple",
      },
    ],
    name: "metaMintSwapBTC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "firstSwapCalldata",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "secondSwapCalldata",
            type: "bytes",
          },
          {
            internalType: "address[]",
            name: "approvedTokens",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "firstDexRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "secondDexRouter",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "nativeIn",
            type: "bool",
          },
          {
            internalType: "address",
            name: "relayRecipient",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "otherSideCalldata",
            type: "bytes",
          },
        ],
        internalType: "struct MetaRouteStructs.MetaRouteTransaction",
        name: "_metarouteTransaction",
        type: "tuple",
      },
    ],
    name: "metaRoute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "metaRouterGateway",
    outputs: [
      {
        internalType: "contract MetaRouterGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_swapCalldata",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_burnToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_synthesis",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_burnCalldata",
        type: "bytes",
      },
    ],
    name: "returnSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sendTransitToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b503060405161001e9061005c565b6001600160a01b039091168152602001604051809103906000f08015801561004a573d6000803e3d6000fd5b506001600160a01b031660805261006a565b6104c480620022fc83390190565b60805161224c620000b06000396000818161011c01528181610b7c01528181610d2201528181610e82015281816111aa015281816114e40152611742015261224c6000f3fe6080604052600436106100705760003560e01c8063732cffe91161004e578063732cffe9146100d7578063a11b1198146100f7578063c394a5da1461010a578063f5b697a51461015a57600080fd5b806308aa1311146100755780633bc788351461009757806362770ff8146100b7575b600080fd5b34801561008157600080fd5b50610095610090366004611c6f565b61017a565b005b3480156100a357600080fd5b506100956100b2366004611cb2565b610647565b3480156100c357600080fd5b506100956100d2366004611d0a565b6109f7565b3480156100e357600080fd5b506100956100f2366004611d8f565b610a51565b610095610105366004611e50565b610cf1565b34801561011657600080fd5b5061013e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b34801561016657600080fd5b50610095610175366004611e8c565b61168e565b600061018a610100830183611f14565b600081811061019b5761019b611f5e565b90506020020160208101906101b09190611f74565b90506101c0610140830183611f8f565b159050610392576000806102636101db610100860186611f14565b60008181106101ec576101ec611f5e565b90506020020160208101906102019190611f74565b602086013561021861014088016101208901611f74565b610226610140890189611f8f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506024925061173c915050565b9150915081610359576102be61027d610100860186611f14565b600081811061028e5761028e611f5e565b90506020020160208101906102a39190611f74565b6102b4610100870160e08801611f74565b86602001356118a5565b7f0ac368c799fd87078497a837c3b184349108599d7c108f68710d3321ba416c6f6102f0610100860160e08701611f74565b6020860135610303610100880188611f14565b600081811061031457610314611f5e565b90506020020160208101906103299190611f74565b604080516001600160a01b039485168152602081019390935292168183015290519081900360600190a150505050565b610367610100850185611f14565b600181811061037857610378611f5e565b905060200201602081019061038d9190611f74565b925050505b6103a0610180830183611f8f565b15905061051a57606082013560006103bc610180850185611f8f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250608485018790526040516370a0823160e01b8152306004820152949550936001600160a01b03881693506370a0823192506024019050602060405180830381865afa15801561043f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104639190611fd6565b905060008061048b868461047f6101808b016101608c01611f74565b878b6101a0013561173c565b9150915081610514576104af866104a96101008a0160e08b01611f74565b856118a5565b7f0ac368c799fd87078497a837c3b184349108599d7c108f68710d3321ba416c6f6104e1610100890160e08a01611f74565b604080516001600160a01b039283168152602081018790529189169082015260600160405180910390a150505050505050565b50505050505b600061052a610100840184611f14565b600161053a610100870187611f14565b610545929150611fef565b81811061055457610554611f5e565b90506020020160208101906105699190611f74565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156105af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d39190611fd6565b90508015610642576106426105ec610100850185611f14565b60016105fc610100880188611f14565b610607929150611fef565b81811061061657610616611f5e565b905060200201602081019061062b9190611f74565b61063c610100860160e08701611f74565b836118a5565b505050565b600061065660e0830183611f14565b600081811061066757610667611f5e565b905060200201602081019061067c9190611f74565b905061068c610120830183611f8f565b159050610793576000806106f16106a660e0860186611f14565b60008181106106b7576106b7611f5e565b90506020020160208101906106cc9190611f74565b60208601356106e361012088016101008901611f74565b610226610120890189611f8f565b915091508161075b57610739816040518060400160405280602081526020017f4d657461526f757465723a20696e7465726e616c2073776170206661696c6564815250611a14565b60405162461bcd60e51b81526004016107529190612034565b60405180910390fd5b61076860e0850185611f14565b600181811061077957610779611f5e565b905060200201602081019061078e9190611f74565b925050505b6107a1610160830183611f8f565b1590506108da57604082013560006107bd610160850185611f8f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250608485018790526040516370a0823160e01b8152306004820152949550936001600160a01b03881693506370a0823192506024019050602060405180830381865afa158015610840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108649190611fd6565b905060008061088c86846108806101608b016101408c01611f74565b878b610180013561173c565b91509150816108d457610739816040518060400160405280601d81526020017f4d657461526f757465723a2066696e616c2063616c6c206661696c6564000000815250611a14565b50505050505b60006108e960e0840184611f14565b60016108f860e0870187611f14565b610903929150611fef565b81811061091257610912611f5e565b90506020020160208101906109279190611f74565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561096d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109919190611fd6565b90508015610642576106426109a960e0850185611f14565b60016109b860e0880188611f14565b6109c3929150611fef565b8181106109d2576109d2611f5e565b90506020020160208101906109e79190611f74565b61063c60e0860160c08701611f74565b610a028383836118a5565b604080516001600160a01b0384811682526020820184905285168183015290517f0ac368c799fd87078497a837c3b184349108599d7c108f68710d3321ba416c6f9181900360600190a1505050565b600080610a998b8b8b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506024925061173c915050565b9150915081610ac457610739816040518060600160405280602281526020016121d360229139611a14565b6040516370a0823160e01b81523060048201526000906001600160a01b038816906370a0823190602401602060405180830381865afa158015610b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2f9190611fd6565b9050600085858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506064810183905290506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690881603610bed5760405162461bcd60e51b815260206004820152601f60248201527f4d657461526f7574657256323a20696e76616c696420726563697069656e74006044820152606401610752565b863b876000829003610c555760405162461bcd60e51b815260206004820152602b60248201527f4d657461526f757465723a2063616c6c20666f722061206e6f6e2d636f6e747260448201526a1858dd081858d8dbdd5b9d60aa1b6064820152608401610752565b5050600080886001600160a01b031683604051610c729190612067565b6000604051808303816000865af19150503d8060008114610caf576040519150601f19603f3d011682016040523d82523d6000602084013e610cb4565b606091505b509150915081610ce057610739816040518060600160405280603181526020016121a260319139611a14565b505050505050505050505050505050565b6000610d006040830183611f14565b9150610d14905060e0830160c08401612094565b610dfe576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016639fc314c8610d546040850185611f14565b6000818110610d6557610d65611f5e565b9050602002016020810190610d7a9190611f74565b336040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0392831660048201529116602482015260a08501356044820152606401600060405180830381600087803b158015610de557600080fd5b505af1158015610df9573d6000803e3d6000fd5b505050505b60a0820135610e0d8380611f8f565b1590506110ea57610e2460e0840160c08501612094565b610e7857610e78610e386040850185611f14565b6000818110610e4957610e49611f5e565b9050602002016020810190610e5e9190611f74565b610e6e6080860160608701611f74565b8560a00135611a4a565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610eb26080850160608601611f74565b6001600160a01b031603610f085760405162461bcd60e51b815260206004820181905260248201527f4d657461526f757465723a20696e76616c696420666972737420726f757465726044820152606401610752565b600080610f1b6080860160608701611f74565b9050803b915081600003610f855760405162461bcd60e51b815260206004820152602b60248201527f4d657461526f757465723a2063616c6c20666f722061206e6f6e2d636f6e747260448201526a1858dd081858d8dbdd5b9d60aa1b6064820152608401610752565b506000905080610f9b6080860160608701611f74565b6001600160a01b031634610faf8780611f8f565b604051610fbd9291906120b1565b60006040518083038185875af1925050503d8060008114610ffa576040519150601f19603f3d011682016040523d82523d6000602084013e610fff565b606091505b50915091508161104857610739816040518060400160405280601d81526020017f4d657461526f757465723a2066697273742073776170206661696c6564000000815250611a14565b6110556040860186611f14565b600181811061106657611066611f5e565b905060200201602081019061107b9190611f74565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e59190611fd6565b925050505b806110f86020850185611f8f565b15905061143757600061110e6020860186611f8f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506024810184905290506111a061115b6040870187611f14565b611166600288611fef565b81811061117557611175611f5e565b905060200201602081019061118a9190611f74565b61119a60a0880160808901611f74565b85611a4a565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166111da60a0870160808801611f74565b6001600160a01b0316036112565760405162461bcd60e51b815260206004820152602160248201527f4d657461526f757465723a20696e76616c6964207365636f6e6420726f75746560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610752565b60008061126960a0880160808901611f74565b9050803b9150816000036112d35760405162461bcd60e51b815260206004820152602b60248201527f4d657461526f757465723a2063616c6c20666f722061206e6f6e2d636f6e747260448201526a1858dd081858d8dbdd5b9d60aa1b6064820152608401610752565b5060009050806112e960a0880160808901611f74565b6001600160a01b0316836040516113009190612067565b6000604051808303816000865af19150503d806000811461133d576040519150601f19603f3d011682016040523d82523d6000602084013e611342565b606091505b50915091508161138b57610739816040518060400160405280601e81526020017f4d657461526f757465723a207365636f6e642073776170206661696c65640000815250611a14565b6113986040880188611f14565b6113a3600189611fef565b8181106113b2576113b2611f5e565b90506020020160208101906113c79190611f74565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561140d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114319190611fd6565b93505050505b61148d6114476040860186611f14565b611452600187611fef565b81811061146157611461611f5e565b90506020020160208101906114769190611f74565b611487610100870160e08801611f74565b83611a4a565b600061149d610100860186611f8f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506064810183905290506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611515610100870160e08801611f74565b6001600160a01b03160361156b5760405162461bcd60e51b815260206004820152601d60248201527f4d657461526f757465723a20696e76616c696420726563697069656e740000006044820152606401610752565b60008061157f610100880160e08901611f74565b9050803b9150816000036115e95760405162461bcd60e51b815260206004820152602b60248201527f4d657461526f757465723a2063616c6c20666f722061206e6f6e2d636f6e747260448201526a1858dd081858d8dbdd5b9d60aa1b6064820152608401610752565b506000905080611600610100880160e08901611f74565b6001600160a01b0316836040516116179190612067565b6000604051808303816000865af19150503d8060008114611654576040519150601f19603f3d011682016040523d82523d6000602084013e611659565b606091505b50915091508161168557610739816040518060600160405280602281526020016121f560229139611a14565b50505050505050565b60006116d488888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a925061173c915050565b50905080611732576116e78883896118a5565b604080516001600160a01b038481168252602082018a90528a168183015290517f0ac368c799fd87078497a837c3b184349108599d7c108f68710d3321ba416c6f9181900360600190a15b5050505050505050565b600060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316036117c15760405162461bcd60e51b815260206004820152601f60248201527f4d657461526f757465723a20696e76616c6964207265636569766553696465006044820152606401610752565b6117cc878688611a4a565b838301869052843b85600082900361183a5760405162461bcd60e51b815260206004820152602b60248201527f4d657461526f757465723a2063616c6c20666f722061206e6f6e2d636f6e747260448201526a1858dd081858d8dbdd5b9d60aa1b6064820152608401610752565b5050846001600160a01b0316846040516118549190612067565b6000604051808303816000865af19150503d8060008114611891576040519150601f19603f3d011682016040523d82523d6000602084013e611896565b606091505b50909890975095505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283929087169161192f9190612067565b6000604051808303816000865af19150503d806000811461196c576040519150601f19603f3d011682016040523d82523d6000602084013e611971565b606091505b509150915081801561199b57508051158061199b57508080602001905181019061199b91906120c1565b611a0d5760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201527f616e73666572206661696c6564000000000000000000000000000000000000006064820152608401610752565b5050505050565b6060604483511015611a27575080611a44565b60048301925082806020019051810190611a4191906120f4565b90505b92915050565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015611ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad69190611fd6565b101561064257604080516001600160a01b0380851660248301527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff604480840182905284518085039091018152606490930184526020830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052925161064293879387939192600092839290871691611b919190612067565b6000604051808303816000865af19150503d8060008114611bce576040519150601f19603f3d011682016040523d82523d6000602084013e611bd3565b606091505b5091509150818015611bfd575080511580611bfd575080806020019051810190611bfd91906120c1565b611a0d5760405162461bcd60e51b815260206004820152602b60248201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060448201527f726f7665206661696c65640000000000000000000000000000000000000000006064820152608401610752565b600060208284031215611c8157600080fd5b813567ffffffffffffffff811115611c9857600080fd5b82016101c08185031215611cab57600080fd5b9392505050565b600060208284031215611cc457600080fd5b813567ffffffffffffffff811115611cdb57600080fd5b82016101a08185031215611cab57600080fd5b80356001600160a01b0381168114611d0557600080fd5b919050565b600080600060608486031215611d1f57600080fd5b611d2884611cee565b9250611d3660208501611cee565b9150604084013590509250925092565b60008083601f840112611d5857600080fd5b50813567ffffffffffffffff811115611d7057600080fd5b602083019150836020828501011115611d8857600080fd5b9250929050565b600080600080600080600080600060e08a8c031215611dad57600080fd5b611db68a611cee565b985060208a01359750611dcb60408b01611cee565b965060608a013567ffffffffffffffff80821115611de857600080fd5b611df48d838e01611d46565b9098509650869150611e0860808d01611cee565b9550611e1660a08d01611cee565b945060c08c0135915080821115611e2c57600080fd5b50611e398c828d01611d46565b915080935050809150509295985092959850929598565b600060208284031215611e6257600080fd5b813567ffffffffffffffff811115611e7957600080fd5b82016101208185031215611cab57600080fd5b600080600080600080600060c0888a031215611ea757600080fd5b611eb088611cee565b965060208801359550611ec560408901611cee565b9450606088013567ffffffffffffffff811115611ee157600080fd5b611eed8a828b01611d46565b90955093505060808801359150611f0660a08901611cee565b905092959891949750929550565b6000808335601e19843603018112611f2b57600080fd5b83018035915067ffffffffffffffff821115611f4657600080fd5b6020019150600581901b3603821315611d8857600080fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215611f8657600080fd5b611a4182611cee565b6000808335601e19843603018112611fa657600080fd5b83018035915067ffffffffffffffff821115611fc157600080fd5b602001915036819003821315611d8857600080fd5b600060208284031215611fe857600080fd5b5051919050565b81810381811115611a4457634e487b7160e01b600052601160045260246000fd5b60005b8381101561202b578181015183820152602001612013565b50506000910152565b6020815260008251806020840152612053816040850160208701612010565b601f01601f19169190910160400192915050565b60008251612079818460208701612010565b9190910192915050565b801515811461209157600080fd5b50565b6000602082840312156120a657600080fd5b8135611cab81612083565b8183823760009101908152919050565b6000602082840312156120d357600080fd5b8151611cab81612083565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561210657600080fd5b815167ffffffffffffffff8082111561211e57600080fd5b818401915084601f83011261213257600080fd5b815181811115612144576121446120de565b604051601f8201601f19908116603f0116810190838211818310171561216c5761216c6120de565b8160405282815287602084870101111561218557600080fd5b612196836020830160208801612010565b97965050505050505056fe4d657461526f7574657256323a2072657665727453796e74686573697a65526571756573742063616c6c206661696c65644d657461526f7574657256323a20696e7465726e616c2073776170206661696c65644d657461526f757465723a206f7468657220736964652063616c6c206661696c6564a264697066735822122068cecc9ce61355cc00df34b231021e7c8f600eff7185f65e14a9970e572dd49a64736f6c6343000814003360a060405234801561001057600080fd5b506040516104c43803806104c483398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161042d6100976000396000818160550152818160a20152610171015261042d6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639fc314c81461003b578063dbec15bb14610050575b600080fd5b61004e610049366004610363565b6100a0565b005b6100777f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16331461016a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f53796d623a2063616c6c6572206973206e6f7420746865206d657461726f757460448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61019683837f00000000000000000000000000000000000000000000000000000000000000008461019b565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052915160009283929088169161023a919061039f565b6000604051808303816000865af19150503d8060008114610277576040519150601f19603f3d011682016040523d82523d6000602084013e61027c565b606091505b50915091508180156102a65750805115806102a65750808060200190518101906102a691906103ce565b610332576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260448201527f616e7366657246726f6d206661696c65640000000000000000000000000000006064820152608401610161565b505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461035e57600080fd5b919050565b60008060006060848603121561037857600080fd5b6103818461033a565b925061038f6020850161033a565b9150604084013590509250925092565b6000825160005b818110156103c057602081860181015185830152016103a6565b506000920191825250919050565b6000602082840312156103e057600080fd5b815180151581146103f057600080fd5b939250505056fea26469706673582212208ee898ca8bff092987d3c2def33bb40bedc8938f469494a9c5fa3defc71d2d6664736f6c63430008140033";

type MetaRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaRouter__factory extends ContractFactory {
  constructor(...args: MetaRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MetaRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MetaRouter__factory {
    return super.connect(runner) as MetaRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaRouterInterface {
    return new Interface(_abi) as MetaRouterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MetaRouter {
    return new Contract(address, _abi, runner) as unknown as MetaRouter;
  }
}
